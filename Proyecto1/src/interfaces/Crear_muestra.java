/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import clases.Actualizar_Tabla;
import clases.Cargar_csv;
import clases.Escribir_muestra;
import clases.Escribir_muestraBinaria;
import clases.Escribir_patronBinario;
import clases.Muestra;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.text.html.HTMLDocument;

/**

 @author sebas
 */
public class Crear_muestra extends javax.swing.JFrame {
    
    int[][] patron_muestra = null;

    /** Creates new form Crear_muestra */
    public Crear_muestra() {
        initComponents();
        setTitle("Crear Muestra");
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /** This method is called from within the constructor to
     initialize the form.
     WARNING: Do NOT modify this code. The content of this method is
     always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_codigo = new javax.swing.JLabel();
        label_descripcion = new javax.swing.JLabel();
        label_patron = new javax.swing.JLabel();
        crear_btn = new javax.swing.JButton();
        cargar_btn = new javax.swing.JButton();
        field_codigo = new javax.swing.JTextField();
        field_descripcion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        label_codigo.setText("Código: ");

        label_descripcion.setText("Descripción:");

        label_patron.setText("Patrón:");

        crear_btn.setText("CREAR");
        crear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_btnActionPerformed(evt);
            }
        });

        cargar_btn.setText("CARGAR PATRÓN");
        cargar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargar_btnActionPerformed(evt);
            }
        });

        field_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_codigoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_patron)
                    .addComponent(label_codigo)
                    .addComponent(label_descripcion))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(field_descripcion)
                    .addComponent(field_codigo)
                    .addComponent(cargar_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(191, Short.MAX_VALUE)
                .addComponent(crear_btn)
                .addGap(187, 187, 187))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_codigo)
                    .addComponent(field_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_descripcion)
                    .addComponent(field_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_patron)
                    .addComponent(cargar_btn))
                .addGap(45, 45, 45)
                .addComponent(crear_btn)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void field_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_codigoActionPerformed

    private void crear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_btnActionPerformed
        //Se crean strings que almacenan los textos de los JTextField
        String codigo;
        String descripcion;
        
        Muestra muestraTemp = new Muestra(); //Se crea un objeto Muestra temporal que almacena los dsatos del formulario
        
        codigo = field_codigo.getText(); //Se guarda el código introducido en el String codigo
        descripcion = field_descripcion.getText(); //Se guarda la descripción introducida en el JTextField en el String descripcion
        
        //Si alguno de los campos está vacío o no se ha cargado una matriz, se muestra un mensaje de error
        if(codigo.equals("") || descripcion.equals("") || patron_muestra == null){
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos", "Error", JOptionPane.ERROR_MESSAGE); //Mensaje de error
        }
        else if(Escribir_muestra.comparar_codigo(codigo)){ //Se invoca el método comparar_codigo() de la clase Escribir_muestra, si este es True, significa que el código ya existe
            JOptionPane.showMessageDialog(null, "El código que ingresó ya existe en el sistema", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{ //Si no se cumple ninguna condición anterior, los datos se almacenarán en el sistema
            
            //En el Objeto de tipo Muestra se guardan los atributos ingresados
            muestraTemp.setCodigo(codigo);
            muestraTemp.setDescripcion(descripcion);
            muestraTemp.setPatron(patron_muestra); //La matriz del csv se guardó previamente en una matriz que se declaró como variable global en esta clase
            
            Escribir_muestra.muestras.add(muestraTemp); //La muestra temporal se ingresa en el ArrayList

            
            Escribir_muestraBinaria.escribir_muestrabin(); //Se escribe el Array de muestras en el archivo binario
            Actualizar_Tabla.nueva_muestra(Administrador.dtm_muestras, Escribir_muestra.muestras, Administrador.ver); //Se actualiza la tabla de muestras
            
            JOptionPane.showMessageDialog(null, "Se ha introducido la muestra correctamente"); //Mensaje de agregado con éxito
            patron_muestra = null; //Se limpia la variable patron_muestra para que se pueda ingresar otra muestra posteriormente
            dispose(); //Se cierra el formulario
        }
        
    }//GEN-LAST:event_crear_btnActionPerformed

    private void cargar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargar_btnActionPerformed
        Cargar_csv cargar = new Cargar_csv(); //Se instancia un objeto de la clase Cargar_csv
        if (cargar.cargarCSV() == 1) { //Si se cumple esta condición, el usuario sí seleccionó un archivo csv
            try {
                patron_muestra = cargar.cargarMuestra(cargar.ruta); //
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_cargar_btnActionPerformed

    /**
     @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crear_muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crear_muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crear_muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crear_muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crear_muestra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargar_btn;
    private javax.swing.JButton crear_btn;
    private javax.swing.JTextField field_codigo;
    private javax.swing.JTextField field_descripcion;
    private javax.swing.JLabel label_codigo;
    private javax.swing.JLabel label_descripcion;
    private javax.swing.JLabel label_patron;
    // End of variables declaration//GEN-END:variables
}
